input{
    # file{
    #     path => "/usr/share/logstash/config/auditbeat.json"
    #     start_position => "beginning"
    #     ecs_compatibility => "v1"
    #     # codec => "json"
    # }
    pipeline { address => "enrich" }
}

filter{

    # json {
    #     source => "message"
    #     target => "[@metadata][message]"
    #     remove_field => "message"
    # }

    prune {
        whitelist_names => [ "@timestamp", "source", "destination" ]
    }

    if [destination][ip] {
        mutate{
            add_field => { "[dst_ip]" => "%{[destination][ip]}"}
        }
    }

    if [source][ip] {
        mutate{
            add_field => { "[src_ip]" => "%{[source][ip]}"}
        }
    }
    if ![src_ip] and ![dst_ip]{
        drop {}
    }

    # mutate{
    #     remove_field => [ "[@metadata][message]" ]
    # }


    if [src_ip] !~ "/^10./" and [src_ip] !~ "/^192.168./" and [src_ip] !~ "/^127./" {
    
        mutate {
            strip => [ "src_ip" ]
        }
        # mutate {
        #     copy => {[destination][ip] => "[device][Address]"}
        # }

        mutate{ 
            add_field => { "[@metadata][srckey_to_check]" => "%{src_ip}"  }
        }

        # Translate filter to lookup if attribute exists in CSV
        translate{
            field => "[@metadata][srckey_to_check]"
            destination  => "[@metadata][srckey_exists]"
            dictionary_path => "/usr/share/logstash/config/misp.csv"
            fallback => "normal"
            refresh_interval => 1
        }

        if [@metadata][srckey_exists] != "normal" {

            mutate {
                copy => { "[@timestamp]" => "[@metadata][timestamp]"}
            }
            dissect {
                mapping => {
                    "[@metadata][srckey_exists]" => "%{category}~%{comment}~%{priority}~%{type}~%{eventid}~%{[@metadata][unix_date]}"
                }
            }
            date {
                match => ["[@metadata][unix_date]", "UNIX"]
                add_field => {"[@metadata][misp_date]" => "%{+YYYY-MM-dd}"}
            }
            mutate{
                strip => ["comment"]
            }
            mutate{
                add_field => {
                    "ip_description" => "Misp Category: %{category}, IPAddress|Port: %{[@metadata][srckey_to_check]}, Priority: %{priority}, MISP EventId: %{eventid}, Misp Reported Date: %{[@metadata][misp_date]}, Comment: %{comment}"
                }
                add_field => {
                    "misp_type" => "Malicious IP Source"
                }
            }
            # mutate {
            #     copy => {"[@metadata][timestamp]" => "[@timestamp]"}
            # }
        }

        mutate {
            remove_field => ["unix_date", "[@metadata][srckey_to_check]", "[@metadata][srckey_exists]", "category","comment","priority","eventid","type","misp_date","source","destination"]
        }
        
    }

    if [dst_ip] !~ "/^10./" and [dst_ip] !~ "/^192.168./" and [dst_ip] !~ "/^127./" {

        mutate {
            strip => [ "dst_ip" ]
        }
        # mutate {
        #     copy => {[destination][ip] => "[device][Address]"}
        # }

        mutate{ 
            add_field => { "[@metadata][dstkey_to_check]" => "%{dst_ip}"  }
        }

        # Translate filter to lookup if attribute exists in CSV
        translate{
            field => "[@metadata][dstkey_to_check]"
            destination  => "[@metadata][dstkey_exists]"
            dictionary_path => "/usr/share/logstash/config/misp.csv"
            fallback => "normal"
            refresh_interval => 1
        }

        if [@metadata][dstkey_exists] != "normal" {

            mutate {
                copy => { "[@timestamp]" => "[@metadata][timestamp]"}
            }
            dissect {
                mapping => {
                    "[@metadata][dstkey_exists]" => "%{category}~%{comment}~%{priority}~%{type}~%{eventid}~%{[@metadata][unix_date]}"
                }
            }
            date {
                match => ["[@metadata][unix_date]", "UNIX"]
                add_field => {"[@metadata][misp_date]" => "%{+YYYY-MM-dd}"}
            }
            mutate{
                strip => ["comment"]
            }
            mutate{
                add_field => {
                    "ip_description" => "Misp Category: %{category}, IPAddress|Port: %{[@metadata][dstkey_to_check]}, Priority: %{priority}, MISP EventId: %{eventid}, Misp Reported Date: %{[@metadata][misp_date]}, Comment: %{comment}"
                }
                add_field => {
                    "misp_type" => "Malicious IP Destination"
                }
            }
            # mutate {
            #     copy => {"[@metadata][timestamp]" => "[@timestamp]"}
            # }
        }else{
            drop {}
        }

        mutate {
            remove_field => ["unix_date", "[@metadata][dstkey_to_check]", "[@metadata][dstkey_exists]", "category","comment","priority","eventid","type","misp_date","source","destination"]
        }
        
    }

}

output{
    stdout {
       codec => rubydebug
       { metadata => true }
    }
    file{
        path => "/usr/share/logstash/config/enriched-auditbeat.json"
        codec => "json"
    }

    elasticsearch{
        hosts => ["https://localhost:9200"]
        index => "logstash-misp-enriched"
        user => ***REMOVED***
        password => ***REMOVED***
        ssl => true
        cacert => "/usr/share/logstash/config/elasticsearch-ca.pem"
        http_compression => true
	 	sniffing => false
    }
}